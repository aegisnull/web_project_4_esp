!function(){"use strict";var e={};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.p="";var n=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t,this._image=n,this._cardTemplateSelector=r,this.isLiked=!1}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".card__container").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__img").src=this._image,this._element.querySelector(".card__img").alt=this._title,this._element.querySelector(".card__title").textContent=this._title,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__like-button").addEventListener("click",(function(){e._cardLike()})),this._element.querySelector(".card__remove-button").addEventListener("click",(function(t){e._cardRemove(t)}))}},{key:"_cardLike",value:function(){this.isLiked=!this.isLiked,this.isLiked?this._element.querySelector(".card__like-button").classList.add("card__like-button_active"):this._element.querySelector(".card__like-button").classList.remove("card__like-button_active")}},{key:"_cardRemove",value:function(e){e.target.parentElement.remove()}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"_addErrorStyling",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_removeErrorStyling",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._removeErrorStyling(e):this._addErrorStyling(e)}},{key:"_toggleButtonState",value:function(e,t){var n=e.every((function(e){return e.validity.valid}));t.disabled=!n}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("modal_active")}},{key:"close",value:function(){this._popup.classList.remove("modal_active")}},{key:"_handleEscClose",value:function(){var e=this;document.addEventListener("keydown",(function(t){"Escape"===t.key&&e.close()}))}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".modal__close-button").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target===e._popup&&e.close()}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=s(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function f(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._formSelector=document.querySelector(t),n}return t=c,(n=[{key:"_getInputValues",value:function(){this._inputList=this._popup.querySelectorAll(".modal__input");var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;l(d(c.prototype),"setEventListeners",this).call(this),this._formSelector.addEventListener("submit",(function(t){t.preventDefault(),e._getInputValues(),e.close()}))}},{key:"close",value:function(){l(d(c.prototype),"close",this).call(this)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(c);function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._user=document.querySelector(t),this._position=document.querySelector(n),this._popupUserField=document.querySelector(".modal__profile-name"),this._popupUserPosition=document.querySelector(".modal__profile-title")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){this._popupUserField.placeholder=this._user.textContent,this._popupUserPosition.placeholder=this._position.textContent}},{key:"setUserInfo",value:function(){this._user.textContent=this._popupUserField.value,this._position.textContent=this._popupUserPosition.value}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=t,this._renderer=n,this._cardList=document.querySelector(r)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._cardList.prepend(e)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupCaption=t._popup.querySelector(".popup__title"),t}return t=c,(n=[{key:"open",value:function(e){this._popupImage.src=e.src,this._popupCaption.textContent=e.alt,this._popup.classList.add("active")}},{key:"close",value:function(){this._popup.classList.remove("active")}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(c),L=(e.p,e.p,e.p,e.p,e.p,e.p,e.p,document.querySelector(".cards")),O=document.createDocumentFragment(),j=[{name:"Valle de Yosemite",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lago Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Montañas Calvas",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Parque Nacional de la Vanoise",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}];new h(j,j.forEach((function(e){var t=new n(e.name,e.link,"#cards").generateCard();document.querySelector(".cards").append(t)})),".cards"),document.querySelector(".modal-post").addEventListener("submit",(function(e){e.preventDefault();var t=new n(q.value,C.value,"#cards").generateCard();O.append(t),L.prepend(O)}));var q=document.querySelector(".modal__profile-cardtitle"),C=document.querySelector(".modal__profile-cardurl"),P=new E("#lightbox");document.querySelectorAll(".card__img").forEach((function(e){e.addEventListener("click",(function(){P.open(e),document.querySelector(".popup__close").addEventListener("click",(function(){P.close()}))}))}));var x={inputSelector:".modal__input",submitButtonSelector:".modal__form-submit",inactiveButtonClass:"modal__form-submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},R=document.querySelector(".modal__form_profile"),T=document.querySelector(".modal__form_place"),B=new o(x,R),I=new o(x,T);B.enableValidation(),I.enableValidation();var U=new m(".profile__name",".profile__title"),V=new y(".modal",".modal__form_profile");document.querySelector(".profile__edit-button").addEventListener("click",(function(){V.open(),V.setEventListeners(),V._handleEscClose(),U.getUserInfo()})),document.querySelector(".modal__form_profile").addEventListener("submit",(function(){U.setUserInfo()}));var D=new y(".modal-post",".modal__form_place");document.querySelector(".profile__post-button").addEventListener("click",(function(){D.open(),D.setEventListeners(),D._handleEscClose()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FDRixJQUdELElBQU1wQyxFQUFnQixDQUNwQkcsY0FBZSxnQkFDZkUscUJBQXNCLHNCQUN0QjBFLG9CQUFxQiw4QkFDckJ4RSxnQkFBaUIsMEJBQ2pCRSxXQUFZLHdCQUdSdUUsRUFBa0JwRyxTQUFTQyxjQUFjLHdCQUN6Q29HLEVBQWNyRyxTQUFTQyxjQUFjLHNCQUVyQ3FHLEVBQXdCLElBQUluRixFQUFjQyxFQUFlZ0YsR0FDekRHLEVBQW9CLElBQUlwRixFQUFjQyxFQUFlaUYsR0FFM0RDLEVBQXNCRSxtQkFDdEJELEVBQWtCQyxtQkFHbEIsSUFBTUMsRUFBVyxJQUFJdkMsRUFBUyxpQkFBa0IsbUJBRTFDd0MsRUFBbUIsSUFBSWpELEVBQWMsU0FBVSx3QkFFM0J6RCxTQUFTQyxjQUFjLHlCQUMvQlMsaUJBQWlCLFNBQVMsV0FDMUNnRyxFQUFpQlIsT0FDakJRLEVBQWlCQyxvQkFDakJELEVBQWlCRSxrQkFDakJILEVBQVNJLGFBQ1YsSUFFbUI3RyxTQUFTQyxjQUFjLHdCQUMvQlMsaUJBQWlCLFVBQVUsV0FDckMrRixFQUFTSyxhQUNWLElBRUQsSUFBTUMsRUFBZSxJQUFJdEQsRUFBYyxjQUFlLHNCQUVoQ3pELFNBQVNDLGNBQWMseUJBQy9CUyxpQkFBaUIsU0FBUyxXQUN0Q3FHLEVBQWFiLE9BQ2JhLEVBQWFKLG9CQUNiSSxFQUFhSCxpQkFDZCxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3Avd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3Avd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiOyIsImNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihjYXJkVGl0bGUsIGNhcmRJbWFnZSwgY2FyZFRlbXBsYXRlU2VsZWN0b3IpIHtcbiAgICB0aGlzLl90aXRsZSA9IGNhcmRUaXRsZTtcbiAgICB0aGlzLl9pbWFnZSA9IGNhcmRJbWFnZTtcbiAgICB0aGlzLl9jYXJkVGVtcGxhdGVTZWxlY3RvciA9IGNhcmRUZW1wbGF0ZVNlbGVjdG9yO1xuICAgIHRoaXMuaXNMaWtlZCA9IGZhbHNlO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIC8vICB0b21hIGVsIG1hcmNhZG8gZGUgSFRNTCB5IGNvcGlhIGVsIGVsZW1lbnRvXG4gICAgLy8gZGV2dWVsdmUgZWwgZWxlbWVudG8gRE9NIGRlIGxhIHRhcmpldGFcbiAgICByZXR1cm4gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRUZW1wbGF0ZVNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19jb250YWluZXJcIilcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgLy8gQWxtYWNlbmFyIGVsIG1hcmNhZG8gZW4gZWwgY2FtcG8gcHJpdmFkbyBfZWxlbWVudFxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICAvLyBBw7FhZGlyIGRhdG9zXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltZ1wiKS5zcmMgPSB0aGlzLl9pbWFnZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1nXCIpLmFsdCA9IHRoaXMuX3RpdGxlO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX3RpdGxlO1xuXG4gICAgLy8gRGV2b2x2ZXIgZWwgZWxlbWVudG9cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NhcmRMaWtlKCk7XG4gICAgICB9KTtcblxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3JlbW92ZS1idXR0b25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgICB0aGlzLl9jYXJkUmVtb3ZlKGV2dCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIF9jYXJkTGlrZSgpIHtcbiAgICB0aGlzLmlzTGlrZWQgPSAhdGhpcy5pc0xpa2VkO1xuXG4gICAgaWYgKHRoaXMuaXNMaWtlZCkge1xuICAgICAgdGhpcy5fZWxlbWVudFxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxuICAgICAgICAuY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZWxlbWVudFxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxuICAgICAgICAuY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB9XG4gIH1cblxuICBfY2FyZFJlbW92ZShldnQpIHtcbiAgICBldnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucmVtb3ZlKCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQ2FyZCB9O1xuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKGZvcm1TZWxlY3RvcnMsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGZvcm1TZWxlY3RvcnMuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGZvcm1TZWxlY3RvcnMuc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gZm9ybVNlbGVjdG9ycy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGZvcm1TZWxlY3RvcnMuZXJyb3JDbGFzcztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICB9XG5cbiAgX2FkZEVycm9yU3R5bGluZyhpbnB1dCkge1xuICAgIGNvbnN0IGVycm9yID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yLnRleHRDb250ZW50ID0gaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2U7XG5cbiAgICBlcnJvci5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX3JlbW92ZUVycm9yU3R5bGluZyhpbnB1dCkge1xuICAgIGNvbnN0IGVycm9yID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3IudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCkge1xuICAgIGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fcmVtb3ZlRXJyb3JTdHlsaW5nKGlucHV0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYWRkRXJyb3JTdHlsaW5nKGlucHV0KTtcbiAgICB9XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRzLCBidXR0b24pIHtcbiAgICBjb25zdCBpc1ZhbGlkID0gaW5wdXRzLmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQpO1xuXG4gICAgYnV0dG9uLmRpc2FibGVkID0gIWlzVmFsaWQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgaW5wdXRzID0gQXJyYXkuZnJvbShcbiAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcbiAgICApO1xuICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuXG4gICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dHMsIGJ1dHRvbik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgRm9ybVZhbGlkYXRvciB9O1xuIiwiY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cCk7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9hY3RpdmVcIik7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfYWN0aXZlXCIpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChlKSA9PiB7XG4gICAgICBpZiAoZS5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXBcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZS1idXR0b25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9KTtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gdGhpcy5fcG9wdXApIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB7IFBvcHVwIH07XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwLCBmb3JtU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cCk7XG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihmb3JtU2VsZWN0b3IpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGZpZWxkKSA9PiB7XG4gICAgICBpbnB1dFZhbHVlc1tmaWVsZC5uYW1lXSA9IGZpZWxkLnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2dldElucHV0VmFsdWVzKCk7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICB9XG59XG5cbmV4cG9ydCB7IFBvcHVwV2l0aEZvcm0gfTtcbiIsImNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IodXNlck5hbWUsIHVzZXJQb3NpdGlvbikge1xuICAgIHRoaXMuX3VzZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lKTtcbiAgICB0aGlzLl9wb3NpdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlclBvc2l0aW9uKTtcbiAgICB0aGlzLl9wb3B1cFVzZXJGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3Byb2ZpbGUtbmFtZVwiKTtcbiAgICB0aGlzLl9wb3B1cFVzZXJQb3NpdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3Byb2ZpbGUtdGl0bGVcIik7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICB0aGlzLl9wb3B1cFVzZXJGaWVsZC5wbGFjZWhvbGRlciA9IHRoaXMuX3VzZXIudGV4dENvbnRlbnQ7XG4gICAgdGhpcy5fcG9wdXBVc2VyUG9zaXRpb24ucGxhY2Vob2xkZXIgPSB0aGlzLl9wb3NpdGlvbi50ZXh0Q29udGVudDtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKCkge1xuICAgIHRoaXMuX3VzZXIudGV4dENvbnRlbnQgPSB0aGlzLl9wb3B1cFVzZXJGaWVsZC52YWx1ZTtcbiAgICB0aGlzLl9wb3NpdGlvbi50ZXh0Q29udGVudCA9IHRoaXMuX3BvcHVwVXNlclBvc2l0aW9uLnZhbHVlO1xuICB9XG59XG5cbmV4cG9ydCB7IFVzZXJJbmZvIH07XG4iLCJjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoaXRlbXMsIHJlbmRlcmVyLCBjYXJkU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY2FyZExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNhcmRTZWxlY3Rvcik7XG4gIH1cblxuICByZW5kZXJlcigpIHtcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oaXRlbSkge1xuICAgIHRoaXMuX2NhcmRMaXN0LnByZXBlbmQoaXRlbSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgU2VjdGlvbiB9O1xuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xuXG5jbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXApIHtcbiAgICBzdXBlcihwb3B1cCk7XG4gICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIHRoaXMuX3BvcHVwQ2FwdGlvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3RpdGxlXCIpO1xuICB9XG5cbiAgb3BlbihpbWFnZSkge1xuICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gaW1hZ2Uuc3JjO1xuICAgIHRoaXMuX3BvcHVwQ2FwdGlvbi50ZXh0Q29udGVudCA9IGltYWdlLmFsdDtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgfVxufVxuXG5leHBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9O1xuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjsgLy8gYWdyZWdhIGxhIGltcG9ydGFjacOzbiBkZWwgYXJjaGl2byBwcmluY2lwYWwgZGUgaG9qYXMgZGUgZXN0aWxvXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IFBvcHVwV2l0aEZvcm0gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgeyBTZWN0aW9uIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuXG4vLyBpbXBvcnQgaW1hZ2VzXG5pbXBvcnQgY2xvc2UgZnJvbSBcIi4uL2ltYWdlcy9jbG9zZS5zdmdcIjtcbmltcG9ydCBlZGl0IGZyb20gXCIuLi9pbWFnZXMvZWRpdC5zdmdcIjtcbmltcG9ydCBsaWtlZmlsbCBmcm9tIFwiLi4vaW1hZ2VzL2xpa2UtZmlsbC5zdmdcIjtcbmltcG9ydCBsaWtlIGZyb20gXCIuLi9pbWFnZXMvbGlrZS5zdmdcIjtcbmltcG9ydCBsb2dvIGZyb20gXCIuLi9pbWFnZXMvbG9nby5zdmdcIjtcbmltcG9ydCBwb3N0IGZyb20gXCIuLi9pbWFnZXMvcG9zdC5zdmdcIjtcbmltcG9ydCB0cmFzaCBmcm9tIFwiLi4vaW1hZ2VzL3RyYXNoLnN2Z1wiO1xuXG4vLyBWYXJpYWJsZSBpbml0aWFsaXphdGlvblxuXG4vLyBDb2RlIHRvIHVzZSBjYXJkcyB3aXRoIHRoZSB0ZW1wbGF0ZSBhbmQgYXJyYXlcbi8vIFNlbGVjdCB3aGVyZSB0byBwdXQgdGhlIHRlbXBsYXRlIGNhcmRzXG5jb25zdCBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNcIik7XG4vLyBDcmVhdGUgYSBzbWFsbCBmcmFnbWVudCB0byBwdXQgdGhlIGNhcmRzIGluXG5jb25zdCBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbi8vIEFkZCBhcnJheXMgZm9yIGR5bmFtaWMgY2FyZHNcbmNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6IFwiVmFsbGUgZGUgWW9zZW1pdGVcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWdvIExvdWlzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIk1vbnRhw7FhcyBDYWx2YXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYXRlbWFyLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJQYXJxdWUgTmFjaW9uYWwgZGUgbGEgVmFub2lzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvdmFub2lzZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCIsXG4gIH0sXG5dO1xuXG5jb25zdCBpbml0aWFsQ2FyZHNSZW5kZXIgPSBuZXcgU2VjdGlvbihcbiAgaW5pdGlhbENhcmRzLFxuICBpbml0aWFsQ2FyZHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChpdGVtLm5hbWUsIGl0ZW0ubGluaywgXCIjY2FyZHNcIik7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNcIikuYXBwZW5kKGNhcmRFbGVtZW50KTtcbiAgfSksXG4gIFwiLmNhcmRzXCJcbik7XG5cbi8vaW5pdGlhbENhcmRzLmZvckVhY2goKGl0ZW0pID0+IHtcbi8vICBjb25zdCBjYXJkID0gbmV3IENhcmQoaXRlbS5uYW1lLCBpdGVtLmxpbmssIFwiI2NhcmRzXCIpO1xuLy8gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbi8vICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzXCIpLmFwcGVuZChjYXJkRWxlbWVudCk7XG4vL30pO1xuXG4vLyBDb2RlIHRvIGFkZCBuZXcgY2FyZHMgd2l0aCB0aGUgZm9ybSBzdW1iaXRcbi8vIEV2ZW50IGxpc3RlbmVyIGZvciBmb3JtIHN1Ym1pdFxuY29uc3QgbmV3UG9zdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLXBvc3RcIik7XG5uZXdQb3N0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGFkZE5ld0NhcmQpO1xuXG4vLyBEZWNsYXJlIGZ1bmN0aW9ucyB0byBmb3JtIGZpZWxkc1xuY29uc3QgbmV3UG9zdE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19wcm9maWxlLWNhcmR0aXRsZVwiKTtcbmNvbnN0IG5ld1Bvc3RMaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fcHJvZmlsZS1jYXJkdXJsXCIpO1xuXG5mdW5jdGlvbiBhZGROZXdDYXJkKGV2dCkge1xuICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKG5ld1Bvc3ROYW1lLnZhbHVlLCBuZXdQb3N0TGluay52YWx1ZSwgXCIjY2FyZHNcIik7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3Q2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgZnJhZ21lbnQuYXBwZW5kKGNhcmRFbGVtZW50KTtcbiAgY2FyZHMucHJlcGVuZChmcmFnbWVudCk7XG59XG5cbmNvbnN0IGxpZ2h0Ym94ID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiI2xpZ2h0Ym94XCIpO1xuXG5jb25zdCBpbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNhcmRfX2ltZ1wiKTtcbmltYWdlcy5mb3JFYWNoKChpbWFnZSkgPT4ge1xuICBpbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGxpZ2h0Ym94Lm9wZW4oaW1hZ2UpO1xuXG4gICAgY29uc3QgbGlnaHRib3hDbG9zZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlXCIpO1xuICAgIGxpZ2h0Ym94Q2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGxpZ2h0Ym94LmNsb3NlKCk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG5cbi8vIHZhbGlkYXRlIGZvcm1cbmNvbnN0IGZvcm1TZWxlY3RvcnMgPSB7XG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm0tc3VibWl0XCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2Zvcm0tc3VibWl0X2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXG59O1xuXG5jb25zdCBlZGl0UHJvZmlsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtX3Byb2ZpbGVcIik7XG5jb25zdCBuZXdDYXJkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1fcGxhY2VcIik7XG5cbmNvbnN0IGVkaXRQcm9maWxlVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZWxlY3RvcnMsIGVkaXRQcm9maWxlRm9ybSk7XG5jb25zdCBuZXdDYXJkVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZWxlY3RvcnMsIG5ld0NhcmRGb3JtKTtcblxuZWRpdFByb2ZpbGVWYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcbm5ld0NhcmRWYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLy8gVXNlciBpbmZvXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcIi5wcm9maWxlX19uYW1lXCIsIFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xuXG5jb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIubW9kYWxcIiwgXCIubW9kYWxfX2Zvcm1fcHJvZmlsZVwiKTtcblxuY29uc3QgZWRpdFByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuKCk7XG4gIGVkaXRQcm9maWxlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgZWRpdFByb2ZpbGVQb3B1cC5faGFuZGxlRXNjQ2xvc2UoKTtcbiAgdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbn0pO1xuXG5jb25zdCBmb3JtUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1fcHJvZmlsZVwiKTtcbmZvcm1Qcm9maWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKCkgPT4ge1xuICB1c2VySW5mby5zZXRVc2VySW5mbygpO1xufSk7XG5cbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLm1vZGFsLXBvc3RcIiwgXCIubW9kYWxfX2Zvcm1fcGxhY2VcIik7XG5cbmNvbnN0IG5ld0NhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3Bvc3QtYnV0dG9uXCIpO1xubmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBuZXdDYXJkUG9wdXAub3BlbigpO1xuICBuZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgbmV3Q2FyZFBvcHVwLl9oYW5kbGVFc2NDbG9zZSgpO1xufSk7XG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsInAiLCJDYXJkIiwiY2FyZFRpdGxlIiwiY2FyZEltYWdlIiwiY2FyZFRlbXBsYXRlU2VsZWN0b3IiLCJ0aGlzIiwiX3RpdGxlIiwiX2ltYWdlIiwiX2NhcmRUZW1wbGF0ZVNlbGVjdG9yIiwiaXNMaWtlZCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jYXJkTGlrZSIsImV2dCIsIl9jYXJkUmVtb3ZlIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwidGFyZ2V0IiwicGFyZW50RWxlbWVudCIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtU2VsZWN0b3JzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJpbnB1dCIsImVycm9yIiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfcmVtb3ZlRXJyb3JTdHlsaW5nIiwiX2FkZEVycm9yU3R5bGluZyIsImlucHV0cyIsImJ1dHRvbiIsImlzVmFsaWQiLCJldmVyeSIsImRpc2FibGVkIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwicHJldmVudERlZmF1bHQiLCJQb3B1cCIsInBvcHVwIiwiX3BvcHVwIiwiZSIsImtleSIsImNsb3NlIiwiUG9wdXBXaXRoRm9ybSIsImZvcm1TZWxlY3RvciIsIl9mb3JtU2VsZWN0b3IiLCJfaW5wdXRMaXN0IiwiaW5wdXRWYWx1ZXMiLCJmaWVsZCIsIm5hbWUiLCJ2YWx1ZSIsIl9nZXRJbnB1dFZhbHVlcyIsIlVzZXJJbmZvIiwidXNlck5hbWUiLCJ1c2VyUG9zaXRpb24iLCJfdXNlciIsIl9wb3NpdGlvbiIsIl9wb3B1cFVzZXJGaWVsZCIsIl9wb3B1cFVzZXJQb3NpdGlvbiIsInBsYWNlaG9sZGVyIiwiU2VjdGlvbiIsIml0ZW1zIiwicmVuZGVyZXIiLCJjYXJkU2VsZWN0b3IiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY2FyZExpc3QiLCJpdGVtIiwicHJlcGVuZCIsIlBvcHVwV2l0aEltYWdlIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBDYXB0aW9uIiwiaW1hZ2UiLCJjYXJkcyIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImluaXRpYWxDYXJkcyIsImxpbmsiLCJjYXJkRWxlbWVudCIsImdlbmVyYXRlQ2FyZCIsImFwcGVuZCIsIm5ld1Bvc3ROYW1lIiwibmV3UG9zdExpbmsiLCJsaWdodGJveCIsIm9wZW4iLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZWRpdFByb2ZpbGVGb3JtIiwibmV3Q2FyZEZvcm0iLCJlZGl0UHJvZmlsZVZhbGlkYXRpb24iLCJuZXdDYXJkVmFsaWRhdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJ1c2VySW5mbyIsImVkaXRQcm9maWxlUG9wdXAiLCJzZXRFdmVudExpc3RlbmVycyIsIl9oYW5kbGVFc2NDbG9zZSIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJuZXdDYXJkUG9wdXAiXSwic291cmNlUm9vdCI6IiJ9